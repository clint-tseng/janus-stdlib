// Generated by CoffeeScript 1.11.1
(function() {
  var $, DomView, LiteralView, find, from, ref, template,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ref = require('janus'), DomView = ref.DomView, template = ref.template, find = ref.find, from = ref.from;

  $ = require('../util/dollar');

  LiteralView = (function(superClass) {
    extend(LiteralView, superClass);

    function LiteralView() {
      return LiteralView.__super__.constructor.apply(this, arguments);
    }

    LiteralView._dom = function() {
      return $('<span class="janus-literal"/>');
    };

    LiteralView._template = template(find('span').text(from(function(subject) {
      return subject;
    })));

    return LiteralView;

  })(DomView);

  module.exports = {
    LiteralView: LiteralView,
    registerWith: function(library) {
      library.register(String, LiteralView);
      library.register(Number, LiteralView);
      return library.register(Boolean, LiteralView);
    }
  };

}).call(this);
