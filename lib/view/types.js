// Generated by CoffeeScript 1.11.1
(function() {
  var $, DomView, SuccessResultView, find, from, ref, template, types,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ref = require('janus'), DomView = ref.DomView, template = ref.template, find = ref.find, from = ref.from, types = ref.types;

  $ = require('../util/dollar');

  SuccessResultView = (function(superClass) {
    extend(SuccessResultView, superClass);

    function SuccessResultView() {
      return SuccessResultView.__super__.constructor.apply(this, arguments);
    }

    SuccessResultView._dom = function() {
      return $('<div class="janus-successResult"/>');
    };

    SuccessResultView._template = template(find('div').render(from.self().map(function(view) {
      return view.subject.value;
    })));

    return SuccessResultView;

  })(DomView);

  module.exports = {
    SuccessResultView: SuccessResultView,
    registerWith: function(library) {
      return library.register(types.result.success, SuccessResultView);
    }
  };

}).call(this);
