// Generated by CoffeeScript 1.11.1
(function() {
  var $, DomView, Varying, VaryingView, find, from, ref, template,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ref = require('janus'), Varying = ref.Varying, DomView = ref.DomView, template = ref.template, find = ref.find, from = ref.from;

  $ = require('../util/dollar');

  VaryingView = (function(superClass) {
    extend(VaryingView, superClass);

    function VaryingView() {
      return VaryingView.__super__.constructor.apply(this, arguments);
    }

    VaryingView._dom = function() {
      return $('<div class="janus-varying"/>');
    };

    VaryingView._template = template(find('div').render(from(function(subject) {
      return subject;
    })).context(from.self(function(view) {
      var ref1;
      return (ref1 = view.options.libraryContext) != null ? ref1 : 'default';
    })));

    return VaryingView;

  })(DomView);

  module.exports = {
    VaryingView: VaryingView,
    registerWith: function(library) {
      return library.register(Varying, VaryingView);
    }
  };

}).call(this);
